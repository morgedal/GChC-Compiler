Grammar

    0 $accept: program $end

    1 program: function program
    2        | constant program
    3        | T_COMMENT program
    4        | mainFunction

    5 type: T_TYPEINT
    6     | T_TYPEFLOAT
    7     | T_TYPESTRING

    8 constant: T_CONST type T_ID T_ASSIGNMENT value T_SEMICOLON

    9 mainFunction: T_FUNCTION T_MAIN T_LBRACE T_RBRACE T_LPAREN functionBody T_RPAREN

   10 function: T_FUNCTION T_ID T_LBRACE typedArgList T_RBRACE T_LPAREN functionBody T_RPAREN
   11         | T_FUNCTION T_ID T_LBRACE typedArgList T_RBRACE T_RET_TYPE_OP type T_LPAREN functionBody T_RPAREN

   12 typedArgList: type T_ID
   13             | type T_ID T_COMMA typedArgList

   14 value: T_STRING
   15      | T_INT_NUMBER
   16      | T_FLOAT_NUMBER

   17 functionBody: expression T_SEMICOLON
   18             | expression T_SEMICOLON functionBody
   19             | T_COMMENT functionBody

   20 expression: variableDeclaration
   21           | loop
   22           | conditionalExpression
   23           | arithmeticExpression
   24           | returnExpression
   25           | functionCall
   26           | printExpression

   27 variableDeclaration: T_VAR type T_ID
   28                    | T_VAR type T_ID T_ASSIGNMENT factor

   29 loop: T_WHILE T_LBRACE condition T_RBRACE T_LPAREN functionBody T_RPAREN

   30 conditionalExpression: T_IF T_LBRACE condition T_RBRACE T_LPAREN functionBody T_RPAREN

   31 condition: functionCall
   32          | arithmeticExpression

   33 returnExpression: T_RETURN factor
   34                 | T_RETURN

   35 functionCall: T_ID T_LBRACE argList T_RBRACE

   36 argList: factor
   37        | factor T_COMMA argList

   38 arithmeticExpression: factor binaryOperator factor
   39                     | unaryOperator factor

   40 factor: T_ID
   41       | value
   42       | T_LBRACE arithmeticExpression T_RBRACE
   43       | functionCall

   44 binaryOperator: T_PLUS
   45               | T_MINUS
   46               | T_MUL
   47               | T_DIV
   48               | T_MOD
   49               | T_AND
   50               | T_OR
   51               | T_GREATER
   52               | T_GREATEREQ
   53               | T_LESS
   54               | T_LESSEQ
   55               | T_EQUAL
   56               | T_NOTEQUAL
   57               | T_ASSIGNMENT

   58 unaryOperator: T_NOT
   59              | T_INC
   60              | T_DEC

   61 printExpression: T_PRINT_OP factor


Terminals, with rules where they appear

$end (0) 0
error (256)
T_VAR (258) 27 28
T_COMMENT (259) 3 19
T_FLOAT_NUMBER (260) 16
T_STRING (261) 14
T_INT_NUMBER (262) 15
T_ASSIGNMENT (263) 8 28 57
T_EQUAL (264) 55
T_NOTEQUAL (265) 56
T_LESS (266) 53
T_LESSEQ (267) 54
T_GREATER (268) 51
T_GREATEREQ (269) 52
T_LPAREN (270) 9 10 11 29 30
T_RPAREN (271) 9 10 11 29 30
T_LBRACE (272) 9 10 11 29 30 35 42
T_RBRACE (273) 9 10 11 29 30 35 42
T_COMMA (274) 13 37
T_SEMICOLON (275) 8 17 18
T_PLUS (276) 44
T_MINUS (277) 45
T_MUL (278) 46
T_DIV (279) 47
T_MOD (280) 48
T_AND (281) 49
T_OR (282) 50
T_NOT (283) 58
T_DEC (284) 60
T_INC (285) 59
T_RET_TYPE_OP (286) 11
T_CONST (287) 8
T_TYPEINT (288) 5
T_TYPEFLOAT (289) 6
T_TYPESTRING (290) 7
T_FUNCTION (291) 9 10 11
T_WHILE (292) 29
T_IF (293) 30
T_ID (294) 8 10 11 12 13 27 28 35 40
T_RETURN (295) 33 34
T_MAIN (296) 9
T_PRINT_OP (297) 61


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1 2 3 4, on right: 0 1 2 3
type (45)
    on left: 5 6 7, on right: 8 11 12 13 27 28
constant (46)
    on left: 8, on right: 2
mainFunction (47)
    on left: 9, on right: 4
function (48)
    on left: 10 11, on right: 1
typedArgList (49)
    on left: 12 13, on right: 10 11 13
value (50)
    on left: 14 15 16, on right: 8 41
functionBody (51)
    on left: 17 18 19, on right: 9 10 11 18 19 29 30
expression (52)
    on left: 20 21 22 23 24 25 26, on right: 17 18
variableDeclaration (53)
    on left: 27 28, on right: 20
loop (54)
    on left: 29, on right: 21
conditionalExpression (55)
    on left: 30, on right: 22
condition (56)
    on left: 31 32, on right: 29 30
returnExpression (57)
    on left: 33 34, on right: 24
functionCall (58)
    on left: 35, on right: 25 31 43
argList (59)
    on left: 36 37, on right: 35 37
arithmeticExpression (60)
    on left: 38 39, on right: 23 32 42
factor (61)
    on left: 40 41 42 43, on right: 28 33 36 37 38 39 61
binaryOperator (62)
    on left: 44 45 46 47 48 49 50 51 52 53 54 55 56 57, on right: 38
unaryOperator (63)
    on left: 58 59 60, on right: 39
printExpression (64)
    on left: 61, on right: 26


State 0

    0 $accept: . program $end

    T_COMMENT   shift, and go to state 1
    T_CONST     shift, and go to state 2
    T_FUNCTION  shift, and go to state 3

    program       go to state 4
    constant      go to state 5
    mainFunction  go to state 6
    function      go to state 7


State 1

    3 program: T_COMMENT . program

    T_COMMENT   shift, and go to state 1
    T_CONST     shift, and go to state 2
    T_FUNCTION  shift, and go to state 3

    program       go to state 8
    constant      go to state 5
    mainFunction  go to state 6
    function      go to state 7


State 2

    8 constant: T_CONST . type T_ID T_ASSIGNMENT value T_SEMICOLON

    T_TYPEINT     shift, and go to state 9
    T_TYPEFLOAT   shift, and go to state 10
    T_TYPESTRING  shift, and go to state 11

    type  go to state 12


State 3

    9 mainFunction: T_FUNCTION . T_MAIN T_LBRACE T_RBRACE T_LPAREN functionBody T_RPAREN
   10 function: T_FUNCTION . T_ID T_LBRACE typedArgList T_RBRACE T_LPAREN functionBody T_RPAREN
   11         | T_FUNCTION . T_ID T_LBRACE typedArgList T_RBRACE T_RET_TYPE_OP type T_LPAREN functionBody T_RPAREN

    T_ID    shift, and go to state 13
    T_MAIN  shift, and go to state 14


State 4

    0 $accept: program . $end

    $end  shift, and go to state 15


State 5

    2 program: constant . program

    T_COMMENT   shift, and go to state 1
    T_CONST     shift, and go to state 2
    T_FUNCTION  shift, and go to state 3

    program       go to state 16
    constant      go to state 5
    mainFunction  go to state 6
    function      go to state 7


State 6

    4 program: mainFunction .

    $default  reduce using rule 4 (program)


State 7

    1 program: function . program

    T_COMMENT   shift, and go to state 1
    T_CONST     shift, and go to state 2
    T_FUNCTION  shift, and go to state 3

    program       go to state 17
    constant      go to state 5
    mainFunction  go to state 6
    function      go to state 7


State 8

    3 program: T_COMMENT program .

    $default  reduce using rule 3 (program)


State 9

    5 type: T_TYPEINT .

    $default  reduce using rule 5 (type)


State 10

    6 type: T_TYPEFLOAT .

    $default  reduce using rule 6 (type)


State 11

    7 type: T_TYPESTRING .

    $default  reduce using rule 7 (type)


State 12

    8 constant: T_CONST type . T_ID T_ASSIGNMENT value T_SEMICOLON

    T_ID  shift, and go to state 18


State 13

   10 function: T_FUNCTION T_ID . T_LBRACE typedArgList T_RBRACE T_LPAREN functionBody T_RPAREN
   11         | T_FUNCTION T_ID . T_LBRACE typedArgList T_RBRACE T_RET_TYPE_OP type T_LPAREN functionBody T_RPAREN

    T_LBRACE  shift, and go to state 19


State 14

    9 mainFunction: T_FUNCTION T_MAIN . T_LBRACE T_RBRACE T_LPAREN functionBody T_RPAREN

    T_LBRACE  shift, and go to state 20


State 15

    0 $accept: program $end .

    $default  accept


State 16

    2 program: constant program .

    $default  reduce using rule 2 (program)


State 17

    1 program: function program .

    $default  reduce using rule 1 (program)


State 18

    8 constant: T_CONST type T_ID . T_ASSIGNMENT value T_SEMICOLON

    T_ASSIGNMENT  shift, and go to state 21


State 19

   10 function: T_FUNCTION T_ID T_LBRACE . typedArgList T_RBRACE T_LPAREN functionBody T_RPAREN
   11         | T_FUNCTION T_ID T_LBRACE . typedArgList T_RBRACE T_RET_TYPE_OP type T_LPAREN functionBody T_RPAREN

    T_TYPEINT     shift, and go to state 9
    T_TYPEFLOAT   shift, and go to state 10
    T_TYPESTRING  shift, and go to state 11

    type          go to state 22
    typedArgList  go to state 23


State 20

    9 mainFunction: T_FUNCTION T_MAIN T_LBRACE . T_RBRACE T_LPAREN functionBody T_RPAREN

    T_RBRACE  shift, and go to state 24


State 21

    8 constant: T_CONST type T_ID T_ASSIGNMENT . value T_SEMICOLON

    T_FLOAT_NUMBER  shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_INT_NUMBER    shift, and go to state 27

    value  go to state 28


State 22

   12 typedArgList: type . T_ID
   13             | type . T_ID T_COMMA typedArgList

    T_ID  shift, and go to state 29


State 23

   10 function: T_FUNCTION T_ID T_LBRACE typedArgList . T_RBRACE T_LPAREN functionBody T_RPAREN
   11         | T_FUNCTION T_ID T_LBRACE typedArgList . T_RBRACE T_RET_TYPE_OP type T_LPAREN functionBody T_RPAREN

    T_RBRACE  shift, and go to state 30


State 24

    9 mainFunction: T_FUNCTION T_MAIN T_LBRACE T_RBRACE . T_LPAREN functionBody T_RPAREN

    T_LPAREN  shift, and go to state 31


State 25

   16 value: T_FLOAT_NUMBER .

    $default  reduce using rule 16 (value)


State 26

   14 value: T_STRING .

    $default  reduce using rule 14 (value)


State 27

   15 value: T_INT_NUMBER .

    $default  reduce using rule 15 (value)


State 28

    8 constant: T_CONST type T_ID T_ASSIGNMENT value . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 32


State 29

   12 typedArgList: type T_ID .
   13             | type T_ID . T_COMMA typedArgList

    T_COMMA  shift, and go to state 33

    $default  reduce using rule 12 (typedArgList)


State 30

   10 function: T_FUNCTION T_ID T_LBRACE typedArgList T_RBRACE . T_LPAREN functionBody T_RPAREN
   11         | T_FUNCTION T_ID T_LBRACE typedArgList T_RBRACE . T_RET_TYPE_OP type T_LPAREN functionBody T_RPAREN

    T_LPAREN       shift, and go to state 34
    T_RET_TYPE_OP  shift, and go to state 35


State 31

    9 mainFunction: T_FUNCTION T_MAIN T_LBRACE T_RBRACE T_LPAREN . functionBody T_RPAREN

    T_VAR           shift, and go to state 36
    T_COMMENT       shift, and go to state 37
    T_FLOAT_NUMBER  shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_INT_NUMBER    shift, and go to state 27
    T_LBRACE        shift, and go to state 38
    T_NOT           shift, and go to state 39
    T_DEC           shift, and go to state 40
    T_INC           shift, and go to state 41
    T_WHILE         shift, and go to state 42
    T_IF            shift, and go to state 43
    T_ID            shift, and go to state 44
    T_RETURN        shift, and go to state 45
    T_PRINT_OP      shift, and go to state 46

    value                  go to state 47
    functionBody           go to state 48
    expression             go to state 49
    variableDeclaration    go to state 50
    loop                   go to state 51
    conditionalExpression  go to state 52
    returnExpression       go to state 53
    functionCall           go to state 54
    arithmeticExpression   go to state 55
    factor                 go to state 56
    unaryOperator          go to state 57
    printExpression        go to state 58


State 32

    8 constant: T_CONST type T_ID T_ASSIGNMENT value T_SEMICOLON .

    $default  reduce using rule 8 (constant)


State 33

   13 typedArgList: type T_ID T_COMMA . typedArgList

    T_TYPEINT     shift, and go to state 9
    T_TYPEFLOAT   shift, and go to state 10
    T_TYPESTRING  shift, and go to state 11

    type          go to state 22
    typedArgList  go to state 59


State 34

   10 function: T_FUNCTION T_ID T_LBRACE typedArgList T_RBRACE T_LPAREN . functionBody T_RPAREN

    T_VAR           shift, and go to state 36
    T_COMMENT       shift, and go to state 37
    T_FLOAT_NUMBER  shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_INT_NUMBER    shift, and go to state 27
    T_LBRACE        shift, and go to state 38
    T_NOT           shift, and go to state 39
    T_DEC           shift, and go to state 40
    T_INC           shift, and go to state 41
    T_WHILE         shift, and go to state 42
    T_IF            shift, and go to state 43
    T_ID            shift, and go to state 44
    T_RETURN        shift, and go to state 45
    T_PRINT_OP      shift, and go to state 46

    value                  go to state 47
    functionBody           go to state 60
    expression             go to state 49
    variableDeclaration    go to state 50
    loop                   go to state 51
    conditionalExpression  go to state 52
    returnExpression       go to state 53
    functionCall           go to state 54
    arithmeticExpression   go to state 55
    factor                 go to state 56
    unaryOperator          go to state 57
    printExpression        go to state 58


State 35

   11 function: T_FUNCTION T_ID T_LBRACE typedArgList T_RBRACE T_RET_TYPE_OP . type T_LPAREN functionBody T_RPAREN

    T_TYPEINT     shift, and go to state 9
    T_TYPEFLOAT   shift, and go to state 10
    T_TYPESTRING  shift, and go to state 11

    type  go to state 61


State 36

   27 variableDeclaration: T_VAR . type T_ID
   28                    | T_VAR . type T_ID T_ASSIGNMENT factor

    T_TYPEINT     shift, and go to state 9
    T_TYPEFLOAT   shift, and go to state 10
    T_TYPESTRING  shift, and go to state 11

    type  go to state 62


State 37

   19 functionBody: T_COMMENT . functionBody

    T_VAR           shift, and go to state 36
    T_COMMENT       shift, and go to state 37
    T_FLOAT_NUMBER  shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_INT_NUMBER    shift, and go to state 27
    T_LBRACE        shift, and go to state 38
    T_NOT           shift, and go to state 39
    T_DEC           shift, and go to state 40
    T_INC           shift, and go to state 41
    T_WHILE         shift, and go to state 42
    T_IF            shift, and go to state 43
    T_ID            shift, and go to state 44
    T_RETURN        shift, and go to state 45
    T_PRINT_OP      shift, and go to state 46

    value                  go to state 47
    functionBody           go to state 63
    expression             go to state 49
    variableDeclaration    go to state 50
    loop                   go to state 51
    conditionalExpression  go to state 52
    returnExpression       go to state 53
    functionCall           go to state 54
    arithmeticExpression   go to state 55
    factor                 go to state 56
    unaryOperator          go to state 57
    printExpression        go to state 58


State 38

   42 factor: T_LBRACE . arithmeticExpression T_RBRACE

    T_FLOAT_NUMBER  shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_INT_NUMBER    shift, and go to state 27
    T_LBRACE        shift, and go to state 38
    T_NOT           shift, and go to state 39
    T_DEC           shift, and go to state 40
    T_INC           shift, and go to state 41
    T_ID            shift, and go to state 44

    value                 go to state 47
    functionCall          go to state 64
    arithmeticExpression  go to state 65
    factor                go to state 56
    unaryOperator         go to state 57


State 39

   58 unaryOperator: T_NOT .

    $default  reduce using rule 58 (unaryOperator)


State 40

   60 unaryOperator: T_DEC .

    $default  reduce using rule 60 (unaryOperator)


State 41

   59 unaryOperator: T_INC .

    $default  reduce using rule 59 (unaryOperator)


State 42

   29 loop: T_WHILE . T_LBRACE condition T_RBRACE T_LPAREN functionBody T_RPAREN

    T_LBRACE  shift, and go to state 66


State 43

   30 conditionalExpression: T_IF . T_LBRACE condition T_RBRACE T_LPAREN functionBody T_RPAREN

    T_LBRACE  shift, and go to state 67


State 44

   35 functionCall: T_ID . T_LBRACE argList T_RBRACE
   40 factor: T_ID .

    T_LBRACE  shift, and go to state 68

    $default  reduce using rule 40 (factor)


State 45

   33 returnExpression: T_RETURN . factor
   34                 | T_RETURN .

    T_FLOAT_NUMBER  shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_INT_NUMBER    shift, and go to state 27
    T_LBRACE        shift, and go to state 38
    T_ID            shift, and go to state 44

    $default  reduce using rule 34 (returnExpression)

    value         go to state 47
    functionCall  go to state 64
    factor        go to state 69


State 46

   61 printExpression: T_PRINT_OP . factor

    T_FLOAT_NUMBER  shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_INT_NUMBER    shift, and go to state 27
    T_LBRACE        shift, and go to state 38
    T_ID            shift, and go to state 44

    value         go to state 47
    functionCall  go to state 64
    factor        go to state 70


State 47

   41 factor: value .

    $default  reduce using rule 41 (factor)


State 48

    9 mainFunction: T_FUNCTION T_MAIN T_LBRACE T_RBRACE T_LPAREN functionBody . T_RPAREN

    T_RPAREN  shift, and go to state 71


State 49

   17 functionBody: expression . T_SEMICOLON
   18             | expression . T_SEMICOLON functionBody

    T_SEMICOLON  shift, and go to state 72


State 50

   20 expression: variableDeclaration .

    $default  reduce using rule 20 (expression)


State 51

   21 expression: loop .

    $default  reduce using rule 21 (expression)


State 52

   22 expression: conditionalExpression .

    $default  reduce using rule 22 (expression)


State 53

   24 expression: returnExpression .

    $default  reduce using rule 24 (expression)


State 54

   25 expression: functionCall .
   43 factor: functionCall .

    T_SEMICOLON  reduce using rule 25 (expression)
    $default     reduce using rule 43 (factor)


State 55

   23 expression: arithmeticExpression .

    $default  reduce using rule 23 (expression)


State 56

   38 arithmeticExpression: factor . binaryOperator factor

    T_ASSIGNMENT  shift, and go to state 73
    T_EQUAL       shift, and go to state 74
    T_NOTEQUAL    shift, and go to state 75
    T_LESS        shift, and go to state 76
    T_LESSEQ      shift, and go to state 77
    T_GREATER     shift, and go to state 78
    T_GREATEREQ   shift, and go to state 79
    T_PLUS        shift, and go to state 80
    T_MINUS       shift, and go to state 81
    T_MUL         shift, and go to state 82
    T_DIV         shift, and go to state 83
    T_MOD         shift, and go to state 84
    T_AND         shift, and go to state 85
    T_OR          shift, and go to state 86

    binaryOperator  go to state 87


State 57

   39 arithmeticExpression: unaryOperator . factor

    T_FLOAT_NUMBER  shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_INT_NUMBER    shift, and go to state 27
    T_LBRACE        shift, and go to state 38
    T_ID            shift, and go to state 44

    value         go to state 47
    functionCall  go to state 64
    factor        go to state 88


State 58

   26 expression: printExpression .

    $default  reduce using rule 26 (expression)


State 59

   13 typedArgList: type T_ID T_COMMA typedArgList .

    $default  reduce using rule 13 (typedArgList)


State 60

   10 function: T_FUNCTION T_ID T_LBRACE typedArgList T_RBRACE T_LPAREN functionBody . T_RPAREN

    T_RPAREN  shift, and go to state 89


State 61

   11 function: T_FUNCTION T_ID T_LBRACE typedArgList T_RBRACE T_RET_TYPE_OP type . T_LPAREN functionBody T_RPAREN

    T_LPAREN  shift, and go to state 90


State 62

   27 variableDeclaration: T_VAR type . T_ID
   28                    | T_VAR type . T_ID T_ASSIGNMENT factor

    T_ID  shift, and go to state 91


State 63

   19 functionBody: T_COMMENT functionBody .

    $default  reduce using rule 19 (functionBody)


State 64

   43 factor: functionCall .

    $default  reduce using rule 43 (factor)


State 65

   42 factor: T_LBRACE arithmeticExpression . T_RBRACE

    T_RBRACE  shift, and go to state 92


State 66

   29 loop: T_WHILE T_LBRACE . condition T_RBRACE T_LPAREN functionBody T_RPAREN

    T_FLOAT_NUMBER  shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_INT_NUMBER    shift, and go to state 27
    T_LBRACE        shift, and go to state 38
    T_NOT           shift, and go to state 39
    T_DEC           shift, and go to state 40
    T_INC           shift, and go to state 41
    T_ID            shift, and go to state 44

    value                 go to state 47
    condition             go to state 93
    functionCall          go to state 94
    arithmeticExpression  go to state 95
    factor                go to state 56
    unaryOperator         go to state 57


State 67

   30 conditionalExpression: T_IF T_LBRACE . condition T_RBRACE T_LPAREN functionBody T_RPAREN

    T_FLOAT_NUMBER  shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_INT_NUMBER    shift, and go to state 27
    T_LBRACE        shift, and go to state 38
    T_NOT           shift, and go to state 39
    T_DEC           shift, and go to state 40
    T_INC           shift, and go to state 41
    T_ID            shift, and go to state 44

    value                 go to state 47
    condition             go to state 96
    functionCall          go to state 94
    arithmeticExpression  go to state 95
    factor                go to state 56
    unaryOperator         go to state 57


State 68

   35 functionCall: T_ID T_LBRACE . argList T_RBRACE

    T_FLOAT_NUMBER  shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_INT_NUMBER    shift, and go to state 27
    T_LBRACE        shift, and go to state 38
    T_ID            shift, and go to state 44

    value         go to state 47
    functionCall  go to state 64
    argList       go to state 97
    factor        go to state 98


State 69

   33 returnExpression: T_RETURN factor .

    $default  reduce using rule 33 (returnExpression)


State 70

   61 printExpression: T_PRINT_OP factor .

    $default  reduce using rule 61 (printExpression)


State 71

    9 mainFunction: T_FUNCTION T_MAIN T_LBRACE T_RBRACE T_LPAREN functionBody T_RPAREN .

    $default  reduce using rule 9 (mainFunction)


State 72

   17 functionBody: expression T_SEMICOLON .
   18             | expression T_SEMICOLON . functionBody

    T_VAR           shift, and go to state 36
    T_COMMENT       shift, and go to state 37
    T_FLOAT_NUMBER  shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_INT_NUMBER    shift, and go to state 27
    T_LBRACE        shift, and go to state 38
    T_NOT           shift, and go to state 39
    T_DEC           shift, and go to state 40
    T_INC           shift, and go to state 41
    T_WHILE         shift, and go to state 42
    T_IF            shift, and go to state 43
    T_ID            shift, and go to state 44
    T_RETURN        shift, and go to state 45
    T_PRINT_OP      shift, and go to state 46

    $default  reduce using rule 17 (functionBody)

    value                  go to state 47
    functionBody           go to state 99
    expression             go to state 49
    variableDeclaration    go to state 50
    loop                   go to state 51
    conditionalExpression  go to state 52
    returnExpression       go to state 53
    functionCall           go to state 54
    arithmeticExpression   go to state 55
    factor                 go to state 56
    unaryOperator          go to state 57
    printExpression        go to state 58


State 73

   57 binaryOperator: T_ASSIGNMENT .

    $default  reduce using rule 57 (binaryOperator)


State 74

   55 binaryOperator: T_EQUAL .

    $default  reduce using rule 55 (binaryOperator)


State 75

   56 binaryOperator: T_NOTEQUAL .

    $default  reduce using rule 56 (binaryOperator)


State 76

   53 binaryOperator: T_LESS .

    $default  reduce using rule 53 (binaryOperator)


State 77

   54 binaryOperator: T_LESSEQ .

    $default  reduce using rule 54 (binaryOperator)


State 78

   51 binaryOperator: T_GREATER .

    $default  reduce using rule 51 (binaryOperator)


State 79

   52 binaryOperator: T_GREATEREQ .

    $default  reduce using rule 52 (binaryOperator)


State 80

   44 binaryOperator: T_PLUS .

    $default  reduce using rule 44 (binaryOperator)


State 81

   45 binaryOperator: T_MINUS .

    $default  reduce using rule 45 (binaryOperator)


State 82

   46 binaryOperator: T_MUL .

    $default  reduce using rule 46 (binaryOperator)


State 83

   47 binaryOperator: T_DIV .

    $default  reduce using rule 47 (binaryOperator)


State 84

   48 binaryOperator: T_MOD .

    $default  reduce using rule 48 (binaryOperator)


State 85

   49 binaryOperator: T_AND .

    $default  reduce using rule 49 (binaryOperator)


State 86

   50 binaryOperator: T_OR .

    $default  reduce using rule 50 (binaryOperator)


State 87

   38 arithmeticExpression: factor binaryOperator . factor

    T_FLOAT_NUMBER  shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_INT_NUMBER    shift, and go to state 27
    T_LBRACE        shift, and go to state 38
    T_ID            shift, and go to state 44

    value         go to state 47
    functionCall  go to state 64
    factor        go to state 100


State 88

   39 arithmeticExpression: unaryOperator factor .

    $default  reduce using rule 39 (arithmeticExpression)


State 89

   10 function: T_FUNCTION T_ID T_LBRACE typedArgList T_RBRACE T_LPAREN functionBody T_RPAREN .

    $default  reduce using rule 10 (function)


State 90

   11 function: T_FUNCTION T_ID T_LBRACE typedArgList T_RBRACE T_RET_TYPE_OP type T_LPAREN . functionBody T_RPAREN

    T_VAR           shift, and go to state 36
    T_COMMENT       shift, and go to state 37
    T_FLOAT_NUMBER  shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_INT_NUMBER    shift, and go to state 27
    T_LBRACE        shift, and go to state 38
    T_NOT           shift, and go to state 39
    T_DEC           shift, and go to state 40
    T_INC           shift, and go to state 41
    T_WHILE         shift, and go to state 42
    T_IF            shift, and go to state 43
    T_ID            shift, and go to state 44
    T_RETURN        shift, and go to state 45
    T_PRINT_OP      shift, and go to state 46

    value                  go to state 47
    functionBody           go to state 101
    expression             go to state 49
    variableDeclaration    go to state 50
    loop                   go to state 51
    conditionalExpression  go to state 52
    returnExpression       go to state 53
    functionCall           go to state 54
    arithmeticExpression   go to state 55
    factor                 go to state 56
    unaryOperator          go to state 57
    printExpression        go to state 58


State 91

   27 variableDeclaration: T_VAR type T_ID .
   28                    | T_VAR type T_ID . T_ASSIGNMENT factor

    T_ASSIGNMENT  shift, and go to state 102

    $default  reduce using rule 27 (variableDeclaration)


State 92

   42 factor: T_LBRACE arithmeticExpression T_RBRACE .

    $default  reduce using rule 42 (factor)


State 93

   29 loop: T_WHILE T_LBRACE condition . T_RBRACE T_LPAREN functionBody T_RPAREN

    T_RBRACE  shift, and go to state 103


State 94

   31 condition: functionCall .
   43 factor: functionCall .

    T_RBRACE  reduce using rule 31 (condition)
    $default  reduce using rule 43 (factor)


State 95

   32 condition: arithmeticExpression .

    $default  reduce using rule 32 (condition)


State 96

   30 conditionalExpression: T_IF T_LBRACE condition . T_RBRACE T_LPAREN functionBody T_RPAREN

    T_RBRACE  shift, and go to state 104


State 97

   35 functionCall: T_ID T_LBRACE argList . T_RBRACE

    T_RBRACE  shift, and go to state 105


State 98

   36 argList: factor .
   37        | factor . T_COMMA argList

    T_COMMA  shift, and go to state 106

    $default  reduce using rule 36 (argList)


State 99

   18 functionBody: expression T_SEMICOLON functionBody .

    $default  reduce using rule 18 (functionBody)


State 100

   38 arithmeticExpression: factor binaryOperator factor .

    $default  reduce using rule 38 (arithmeticExpression)


State 101

   11 function: T_FUNCTION T_ID T_LBRACE typedArgList T_RBRACE T_RET_TYPE_OP type T_LPAREN functionBody . T_RPAREN

    T_RPAREN  shift, and go to state 107


State 102

   28 variableDeclaration: T_VAR type T_ID T_ASSIGNMENT . factor

    T_FLOAT_NUMBER  shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_INT_NUMBER    shift, and go to state 27
    T_LBRACE        shift, and go to state 38
    T_ID            shift, and go to state 44

    value         go to state 47
    functionCall  go to state 64
    factor        go to state 108


State 103

   29 loop: T_WHILE T_LBRACE condition T_RBRACE . T_LPAREN functionBody T_RPAREN

    T_LPAREN  shift, and go to state 109


State 104

   30 conditionalExpression: T_IF T_LBRACE condition T_RBRACE . T_LPAREN functionBody T_RPAREN

    T_LPAREN  shift, and go to state 110


State 105

   35 functionCall: T_ID T_LBRACE argList T_RBRACE .

    $default  reduce using rule 35 (functionCall)


State 106

   37 argList: factor T_COMMA . argList

    T_FLOAT_NUMBER  shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_INT_NUMBER    shift, and go to state 27
    T_LBRACE        shift, and go to state 38
    T_ID            shift, and go to state 44

    value         go to state 47
    functionCall  go to state 64
    argList       go to state 111
    factor        go to state 98


State 107

   11 function: T_FUNCTION T_ID T_LBRACE typedArgList T_RBRACE T_RET_TYPE_OP type T_LPAREN functionBody T_RPAREN .

    $default  reduce using rule 11 (function)


State 108

   28 variableDeclaration: T_VAR type T_ID T_ASSIGNMENT factor .

    $default  reduce using rule 28 (variableDeclaration)


State 109

   29 loop: T_WHILE T_LBRACE condition T_RBRACE T_LPAREN . functionBody T_RPAREN

    T_VAR           shift, and go to state 36
    T_COMMENT       shift, and go to state 37
    T_FLOAT_NUMBER  shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_INT_NUMBER    shift, and go to state 27
    T_LBRACE        shift, and go to state 38
    T_NOT           shift, and go to state 39
    T_DEC           shift, and go to state 40
    T_INC           shift, and go to state 41
    T_WHILE         shift, and go to state 42
    T_IF            shift, and go to state 43
    T_ID            shift, and go to state 44
    T_RETURN        shift, and go to state 45
    T_PRINT_OP      shift, and go to state 46

    value                  go to state 47
    functionBody           go to state 112
    expression             go to state 49
    variableDeclaration    go to state 50
    loop                   go to state 51
    conditionalExpression  go to state 52
    returnExpression       go to state 53
    functionCall           go to state 54
    arithmeticExpression   go to state 55
    factor                 go to state 56
    unaryOperator          go to state 57
    printExpression        go to state 58


State 110

   30 conditionalExpression: T_IF T_LBRACE condition T_RBRACE T_LPAREN . functionBody T_RPAREN

    T_VAR           shift, and go to state 36
    T_COMMENT       shift, and go to state 37
    T_FLOAT_NUMBER  shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_INT_NUMBER    shift, and go to state 27
    T_LBRACE        shift, and go to state 38
    T_NOT           shift, and go to state 39
    T_DEC           shift, and go to state 40
    T_INC           shift, and go to state 41
    T_WHILE         shift, and go to state 42
    T_IF            shift, and go to state 43
    T_ID            shift, and go to state 44
    T_RETURN        shift, and go to state 45
    T_PRINT_OP      shift, and go to state 46

    value                  go to state 47
    functionBody           go to state 113
    expression             go to state 49
    variableDeclaration    go to state 50
    loop                   go to state 51
    conditionalExpression  go to state 52
    returnExpression       go to state 53
    functionCall           go to state 54
    arithmeticExpression   go to state 55
    factor                 go to state 56
    unaryOperator          go to state 57
    printExpression        go to state 58


State 111

   37 argList: factor T_COMMA argList .

    $default  reduce using rule 37 (argList)


State 112

   29 loop: T_WHILE T_LBRACE condition T_RBRACE T_LPAREN functionBody . T_RPAREN

    T_RPAREN  shift, and go to state 114


State 113

   30 conditionalExpression: T_IF T_LBRACE condition T_RBRACE T_LPAREN functionBody . T_RPAREN

    T_RPAREN  shift, and go to state 115


State 114

   29 loop: T_WHILE T_LBRACE condition T_RBRACE T_LPAREN functionBody T_RPAREN .

    $default  reduce using rule 29 (loop)


State 115

   30 conditionalExpression: T_IF T_LBRACE condition T_RBRACE T_LPAREN functionBody T_RPAREN .

    $default  reduce using rule 30 (conditionalExpression)
